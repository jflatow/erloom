#!/usr/bin/env escript
%% -*- erlang -*-

follow(Path) ->
    case file:read_link_all(Path) of
        {ok, Linked} ->
            follow(filename:absname(Linked, filename:dirname(Path)));
        {error, einval} ->
            Path
    end.

add_paths() ->
    Script = follow(escript:script_name()),
    RelPath = filename:dirname(filename:dirname(Script)),
    code:add_paths([RelPath ++ "/ebin",
                    RelPath ++ "/deps/erlkit/ebin"]).

main([Rel, Offs|Roots]) ->
    add_paths(),
    lnix(Roots, {util:str(Rel), util:int(Offs)});
main(_) ->
    io:format("usage: ~s REL OFFS ROOTS...~n", [escript:script_name()]).

lnix([Root|Rest], {Rel, Offs} = Mark) ->
    {ok, Log} = log:open(Root),
    {ok, Data} = log:annul(Log, Mark),
    ok = io:format("~s ~s ~8B\t~s~n",
                   [Root, Rel, Offs, erloom_bin:format_message(binary_to_term(Data))]),
    ok = log:close(Log),
    lnix(Rest, Mark);
lnix([], _) ->
    ok.
